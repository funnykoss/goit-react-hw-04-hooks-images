{"version":3,"sources":["components/Modal/Modal.module.css","App.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","services/imageApi.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","props","useState","searchInput","setSearchInput","className","s","onSubmit","event","preventDefault","trim","toast","error","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","api","fetchImagesAPI","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","onClose","createPortal","overlay","onClick","target","modal","modalImg","src","alt","ImageGalleryItem","tags","dataLargeImg","openModal","GalleryItemImage","ImageGallery","images","map","id","webformatURL","largeImageURL","prototype","PropTypes","arrayOf","shape","isRequired","func","LoaderSpin","state","loader","color","height","Component","Button","loadImages","App","setImages","setPage","isLoading","setIsLoading","setError","showModal","setShowModal","modalImage","setModalImage","setAlt","imagesAPI","hits","length","catch","finally","scrolling","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","Loader","dataset","largeimg","console","log","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,SAAW,0B,mBCA3FD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,qB,mBCAjDD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,6JCMZ,SAASC,EAAWC,GACjC,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAeE,OACE,wBAAQC,UAAWC,IAAEN,UAArB,SACA,uBAAMO,SAhBc,SAAAC,GAIlB,GAFAA,EAAMC,iBAEqB,KAAvBN,EAAYO,OACZ,OAAOC,IAAMC,MAAM,mFAEvBX,EAAMM,SAASJ,GACfC,EAAe,KASjBC,UAAWC,IAAEO,WADb,UAEF,wBAAQC,KAAK,SAAST,UAAWC,IAAES,iBAAnC,SACE,sBAAMV,UAAWC,IAAEU,sBAAnB,sBAGF,uBACEX,UAAWC,IAAEW,gBACbH,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOlB,EACPmB,SAlBsB,SAAAd,GACtBJ,EAAeI,EAAMe,cAAcF,MAAMG,uBCR/C,IAIeC,EAJH,CACRC,eAZJ,SAAwBvB,EAAawB,GAEjC,OAAOC,MAAM,8BAAD,OAA+BzB,EAA/B,iBAAmDwB,EAAnD,gBAJA,oCAIA,yDACPE,MAAK,SAAAC,GACM,OAAIA,EAASC,GACHD,EAASE,OAE/BC,QAAQC,OAAO,IAAIC,MAAJ,4NAAqDhC,U,iBCLtEiC,EAAWC,SAASC,cAAc,eACzB,SAASC,EAAOtC,GAG7BuC,qBAAU,WAEN,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACHF,OAAOG,oBAAoB,UAAWD,MAE3C,IAOA,SAAUA,EAAenC,GACH,WAAfA,EAAMqC,MACN5C,EAAM6C,UAId,OAAOC,uBACC,qBAAK1C,UAAWC,IAAE0C,QAASC,QAZP,SAAAzC,GACpBA,EAAMe,gBAAkBf,EAAM0C,QAC/BjD,EAAM6C,WAUL,SACA,qBAAKzC,UAAWC,IAAE6C,MAAlB,SACQ,qBAAK9C,UAAWC,IAAE8C,SAAUC,IAAKpD,EAAMoD,IAAKC,IAAKrD,EAAMqD,UAG/DlB,G,oBC5BG,SAASmB,EAAT,GAAmE,IAAvCC,EAAsC,EAAtCA,KAAMH,EAAgC,EAAhCA,IAAKI,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,UAChE,OACI,oBAAIrD,UAAWC,IAAEiD,iBAAkBN,QAASS,EAA5C,SACI,qBACIL,IAAKA,EACLC,IAAKE,EACL,gBAAeC,EACfpD,UAAWC,IAAEqD,qB,oBCNd,SAASC,EAAT,GAA0C,IAAnBC,EAAkB,EAAlBA,OAAQZ,EAAU,EAAVA,QAC1C,OACI,oBAAI5C,UAAWC,IAAEsD,aAAjB,SACKC,EAAOC,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIP,EAAwC,EAAxCA,KAAMQ,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cACnC,OACI,cAACV,EAAD,CAEIC,KAAMA,EACNH,IAAKW,EACLP,aAAcQ,EACdP,UAAWT,GAJNc,QAY7BH,EAAaM,UAAY,CACrBL,OAAQM,IAAUC,QAAQD,IAAUE,OAAOC,WAC3CrB,QAASkB,IAAUI,M,8ECTRC,E,4MAVbC,MAAQ,G,4CACR,WACE,OACE,qBAAKpE,UAAWC,IAAEoE,OAAlB,SACE,cAAC,IAAD,CAAQ5D,KAAK,eAAe6D,MAAM,UAAUC,OAAQ,W,GALnCC,a,iBCDV,SAASC,EAAT,GAA+B,IAAdC,EAAa,EAAbA,WAC5B,OACI,wBAAQjE,KAAK,SAAST,UAAWC,IAAEwE,OAAQ7B,QAAS8B,EAApD,0B,qBCkFOC,MA7Ef,WACE,MAAsC9E,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAO2D,EAAP,KAAeoB,EAAf,KACA,EAAwB/E,mBAAS,GAAjC,mBAAOyB,EAAP,KAAauD,EAAb,KACA,EAAkChF,oBAAS,GAA3C,mBAAOiF,EAAP,KAAkBC,EAAlB,KACA,EAA0BlF,mBAAS,MAAnC,mBAAOU,EAAP,KAAcyE,EAAd,KACA,EAAkCnF,oBAAS,GAA3C,mBAAOoF,EAAP,KAAkBC,EAAlB,KACA,EAAoCrF,mBAAS,IAA7C,mBAAOsF,EAAP,KAAmBC,EAAnB,KACA,EAAsBvF,mBAAS,MAA/B,mBAAOoD,EAAP,KAAYoC,EAAZ,KACAlD,qBAAU,WACY,KAAhBrC,GACJwF,EACGjE,eAAevB,EAAawB,GAC5BE,MAAK,YAAe,IAAZ+D,EAAW,EAAXA,KACP,GAAoB,IAAhBA,EAAKC,OACP,OAAOR,EAAS,qNAAD,OAC8BlF,IAG/C8E,EAAU,GAAD,mBAAKpB,GAAL,YAAgB+B,KACzBV,EAAQvD,MAETmE,OAAM,SAAAlF,GAAK,OAAIyE,EAASzE,MACxBmF,SAAQ,kBAAMX,GAAa,QAC7B,CAACzD,EAAMxB,IAEV,IAaM6F,EAAY,WAChBC,YAAW,WACTxD,OAAOyD,SAAS,CACdC,IAAK9D,SAAS+D,gBAAgBC,aAC9BC,SAAU,aAEX,MAECC,EAAc,WAClBhB,GAAa,SAAAD,GAAS,OAAKA,MAY7B,OACE,sBAAKjF,UAAWC,IAAE0E,IAAlB,UACE,cAAChF,EAAD,CAAWO,SApCE,SAAAJ,GACfC,EAAeD,GACf8E,EAAU,IACVC,EAAQ,GACRG,EAAS,MACTD,GAAa,MAgCVD,GAAa,cAACqB,EAAD,IACb3C,EAAOgC,OAAS,IAAMjF,GACrB,qCACE,cAACgD,EAAD,CAAcX,QAhBJ,SAAAzC,GAChBiF,GAAc,kBAAMjF,EAAM0C,OAAOuD,QAAQC,YACzChB,GAAO,kBAAMlF,EAAM0C,OAAOI,OAC1BiD,KAawC1C,OAAQA,IAC1C,cAACiB,EAAD,CAAQC,WAlCG,WACjBK,GAAa,GACbF,GAAQ,SAAAvD,GAAI,OAAIA,EAAO,KACvBgF,QAAQC,IAAIjF,GACZqE,UAiCGV,GAAa,cAAC/C,EAAD,CAAOO,QAfN,WACjB2C,EAAc,IACdc,KAa4ClD,IAAKmC,EAAYlC,IAAKA,IAC/D1C,GAAS,mBAAGP,UAAWC,IAAEM,MAAhB,SAAwBA,IAClC,cAAC,IAAD,CAAgBiG,UAAW,UCvElBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnF,MAAK,YAAkD,IAA/CoF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnF,SAASoF,eAAe,SAM1BX,K,kBCfAhH,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,kBCAhPD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,iBAAmB,uCAAuC,iBAAmB,0C","file":"static/js/main.975a0c5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\",\"modalImg\":\"Modal_modalImg__1ybZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"error\":\"App_error__1umzI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__1j2Bs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport s from \"./Searchbar.module.css\";\n\n\nexport default function Searchbar (props){\n  const [searchInput, setSearchInput] = useState('');\n    const handlerSubmit = event => {\n          \n        event.preventDefault();\n      \n        if (searchInput.trim() === ''){\n            return toast.error('введите запрос')\n        }\n        props.onSubmit(searchInput)\n        setSearchInput('')\n    }\n\n   const  handlerOnChange = event => {\n      setSearchInput(event.currentTarget.value.toLowerCase() )   \n    }\n    return (\n      <header className={s.Searchbar}>\n      <form onSubmit={ handlerSubmit }\n      className={s.SearchForm}>\n    <button type=\"submit\" className={s.SearchFormButton}>\n      <span className={s.SearchFormButtonLabel}>Search</span>\n    </button>\n\n    <input\n      className={s.SearchFormInput}\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search images and photos\"\n      value={searchInput}\n      onChange={handlerOnChange}\n    />\n  </form>\n</header>\n    )\n}\n\n\n\n\n\n\n\n","const API_KEY = '6175642-0178aa6b85454b63af0eb865e'\n// const BASE_URL = 'https://pixabay.com/api/'\nfunction fetchImagesAPI(searchInput, page ) {\n   \n    return fetch(`https://pixabay.com/api/?q=${searchInput}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n        .then(response => {\n                    if (response.ok) {\n                       return response.json()\n                    }\n return Promise.reject(new Error(`не удалось найти изображение по запросу ${searchInput}`))\n         })\n}\n\nconst api = {\n    fetchImagesAPI,\n}\n\nexport default api","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from \"./Modal.module.css\";\n\nconst modalRoot= document.querySelector('#modal-root')\nexport default function Modal (props) {\n   \n    \n  useEffect(() => {\n      window.addEventListener('keydown', handleKeyDown )\n      return () => {\n          window.removeEventListener('keydown', handleKeyDown)\n      }\n  }, [])\n\n    const handleBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n           props.onClose()\n        }\n    }\n     function  handleKeyDown (event) {\n        if (event.code === 'Escape') {\n            props.onClose()\n        }\n    }\n\n    return createPortal(\n            <div className={s.overlay} onClick={handleBackdropClick}>\n            <div className={s.modal}>\n                    <img className={s.modalImg} src={props.src} alt={props.alt}></img> \n            </div>\n        </div>,\n            modalRoot,\n        );\n    \n}","import React from 'react';\nimport s from \"./ImageGallery.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function ImageGalleryItem({ tags, src, dataLargeImg, openModal }) {\n    return (\n        <li className={s.ImageGalleryItem} onClick={openModal}>\n            <img\n                src={src}\n                alt={tags}\n                data-largeimg={dataLargeImg}\n                className={s.GalleryItemImage} />\n        </li>\n    );\n}\n\nImageGalleryItem.propTypes = {\n    tags: PropTypes.string.isRequired,\n    src: PropTypes.string.isRequired,\n    dataLargeImg: PropTypes.string.isRequired,\n    openModal: PropTypes.func,\n}","import React from 'react';\nimport ImageGalleryItem from './ImageGalleryItem'\nimport s from \"./ImageGallery.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function ImageGallery({images, onClick}) {\n    return (\n        <ul className={s.ImageGallery}>\n            {images.map(({ id, tags, webformatURL, largeImageURL }) => {\n                return (\n                    <ImageGalleryItem\n                        key={id}\n                        tags={tags}\n                        src={webformatURL}\n                        dataLargeImg={largeImageURL}\n                        openModal={onClick}\n                    />   \n                )\n            })}\n        </ul>\n    )\n}\n\nImageGallery.prototype = {\n    images: PropTypes.arrayOf(PropTypes.shape).isRequired,\n    onClick: PropTypes.func,\n}","import { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport s from \"./Loader.module.css\";\n\nclass LoaderSpin extends Component {\n  state = {};\n  render() {\n    return (\n      <div className={s.loader}>\n        <Loader type=\"BallTriangle\" color=\"#3f51b5\" height={60} />\n      </div>\n    );\n  }\n}\n\nexport default LoaderSpin;","import React from 'react';\nimport s from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default function Button({loadImages}) {\n    return (\n        <button type=\"button\" className={s.Button} onClick={loadImages}>\n            Load more...\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n}","import { useState, useEffect } from 'react';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport imagesAPI from './services/imageApi';\nimport Modal from './components/Modal/Modal';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport LoaderSpin from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './App.module.css';\n\nfunction App() {\n  const [searchInput, setSearchInput] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n  const [alt, setAlt] = useState(null);\n  useEffect(() => {\n    if (searchInput === '') return;\n    imagesAPI\n      .fetchImagesAPI(searchInput, page)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          return setError(\n            `не удалось найти изображение по запросу ${searchInput}`,\n          );\n        }\n        setImages([...images, ...hits]);\n        setPage(page);\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  }, [page, searchInput]);\n\n  const onSearch = searchInput => {\n    setSearchInput(searchInput);\n    setImages([]);\n    setPage(1);\n    setError(null);\n    setIsLoading(true);\n  };\n  const onLoadMore = () => {\n    setIsLoading(true);\n    setPage(page => page + 1);\n    console.log(page);\n    scrolling();\n  };\n  const scrolling = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n  const toggleModal = () => {\n    setShowModal(showModal => !showModal);\n  };\n  const openModal = event => {\n    setModalImage(() => event.target.dataset.largeimg);\n    setAlt(() => event.target.alt);\n    toggleModal();\n  };\n  const closeModal = () => {\n    setModalImage('');\n    toggleModal();\n  };\n\n  return (\n    <div className={s.App}>\n      <Searchbar onSubmit={onSearch} />\n      {isLoading && <LoaderSpin />}\n      {images.length > 0 && !error && (\n        <>\n          <ImageGallery onClick={openModal} images={images} />\n          <Button loadImages={onLoadMore} />\n        </>\n      )}\n      {showModal && <Modal onClose={closeModal} src={modalImage} alt={alt} />}\n      {error && <p className={s.error}>{error}</p>}\n      <ToastContainer autoClose={3000} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__8f9cn\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__30xkQ\",\"GalleryItemImage\":\"ImageGallery_GalleryItemImage__2xcKD\"};"],"sourceRoot":""}